#!/bin/bash

# Module de tests pour SUPCHAT Docker Manager
# Auteur: SUPCHAT Team

# Fonction pour lancer les tests automatis√©s
run_tests() {
    echo -e "\n${GREEN}üß™ Lancement des tests automatis√©s...${NC}"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    
    # V√©rifier si docker-compose.test.yml existe
    if [[ ! -f "docker-compose.test.yml" ]]; then
        echo -e "${RED}‚ùå Erreur: docker-compose.test.yml non trouv√©${NC}"
        echo "Ce fichier est n√©cessaire pour l'environnement de test isol√©."
        pause
        return 1
    fi
    
    echo -e "\n${CYAN}üöÄ Options de test disponibles:${NC}"
    echo -e "${WHITE}  1)${NC} üèÉ Lancer tous les tests"
    echo -e "${WHITE}  2)${NC} üìä Lancer les tests avec couverture"
    echo -e "${WHITE}  3)${NC} üîç Tests sp√©cifiques (routes utilisateur)"
    echo -e "${WHITE}  4)${NC} üîß Mode debug (logs d√©taill√©s)"
    echo -e "${WHITE}  5)${NC} üßπ Nettoyer l'environnement de test"
    echo -e "${WHITE}  0)${NC} ‚ùå Retour au menu principal"
    echo ""
    read -p "Votre choix (0-5): " test_choice
    
    case $test_choice in
        1)
            echo -e "\n${BLUE}üöÄ D√©marrage de l'environnement de test...${NC}"
            docker-compose -f docker-compose.test.yml up -d
            
            echo -e "\n${BLUE}‚è≥ Attente que les services soient pr√™ts...${NC}"
            sleep 5
            
            echo -e "\n${GREEN}üß™ Ex√©cution de tous les tests...${NC}"
            docker-compose -f docker-compose.test.yml exec api npm test
            
            echo -e "\n${YELLOW}üõë Arr√™t de l'environnement de test...${NC}"
            docker-compose -f docker-compose.test.yml down
            ;;
        2)
            echo -e "\n${BLUE}üöÄ D√©marrage de l'environnement de test...${NC}"
            docker-compose -f docker-compose.test.yml up -d
            
            echo -e "\n${BLUE}‚è≥ Attente que les services soient pr√™ts...${NC}"
            sleep 5
            
            echo -e "\n${GREEN}üìä Ex√©cution des tests avec couverture...${NC}"
            docker-compose -f docker-compose.test.yml exec api npm run test:coverage
            
            echo -e "\n${YELLOW}üõë Arr√™t de l'environnement de test...${NC}"
            docker-compose -f docker-compose.test.yml down
            ;;
        3)
            echo -e "\n${BLUE}üöÄ D√©marrage de l'environnement de test...${NC}"
            docker-compose -f docker-compose.test.yml up -d
            
            echo -e "\n${BLUE}‚è≥ Attente que les services soient pr√™ts...${NC}"
            sleep 5
            
            echo -e "\n${GREEN}üîç Tests des routes utilisateur...${NC}"
            docker-compose -f docker-compose.test.yml exec api npm test -- --testNamePattern="user"
            
            echo -e "\n${YELLOW}üõë Arr√™t de l'environnement de test...${NC}"
            docker-compose -f docker-compose.test.yml down
            ;;
        4)
            echo -e "\n${BLUE}üöÄ D√©marrage de l'environnement de test...${NC}"
            docker-compose -f docker-compose.test.yml up -d
            
            echo -e "\n${BLUE}‚è≥ Attente que les services soient pr√™ts...${NC}"
            sleep 5
            
            echo -e "\n${GREEN}üîß Tests en mode debug...${NC}"
            echo -e "${CYAN}Logs d√©taill√©s activ√©s${NC}"
            docker-compose -f docker-compose.test.yml exec api sh -c "DEBUG=* npm test"
            
            echo -e "\n${YELLOW}üõë Arr√™t de l'environnement de test...${NC}"
            docker-compose -f docker-compose.test.yml down
            ;;
        5)
            echo -e "\n${YELLOW}üßπ Nettoyage de l'environnement de test...${NC}"
            echo -e "${RED}‚ö†Ô∏è  Cela va supprimer:${NC}"
            echo "   ‚Ä¢ Les containers de test"
            echo "   ‚Ä¢ Les volumes de test (base de donn√©es de test)"
            echo ""
            read -p "Confirmer le nettoyage ? (y/N): " confirm
            
            if [[ "$confirm" =~ ^[Yy]$ ]]; then
                echo "üõë Arr√™t et suppression des containers de test..."
                docker-compose -f docker-compose.test.yml down -v
                
                echo "üóëÔ∏è Suppression des images de test..."
                docker images | grep "test" | awk '{print $3}' | xargs -r docker rmi -f 2>/dev/null
                
                echo -e "${GREEN}‚úÖ Environnement de test nettoy√© !${NC}"
            else
                echo -e "${YELLOW}Nettoyage annul√©${NC}"
            fi
            ;;
        0)
            echo -e "${YELLOW}Retour au menu principal...${NC}"
            return 0
            ;;
        *)
            echo -e "\n${RED}‚ùå Choix invalide.${NC}"
            ;;
    esac
    
    echo -e "\n${CYAN}üí° Conseils pour les tests:${NC}"
    echo "   ‚Ä¢ Consultez docs/guides/GUIDE-TESTS-DOCKER.md pour plus d'informations"
    echo "   ‚Ä¢ Les tests utilisent une base de donn√©es isol√©e (db-test)"
    echo "   ‚Ä¢ Aucune donn√©e de d√©veloppement n'est affect√©e"
    
    pause
}
